Docker uses a client-server architecture.
The Docker client talks to the Docker daemon, which does the heavy lifting of building, running, and distributing your Docker containers.
The Docker client and daemon can run on the same system, or you can connect a Docker client to a remote Docker daemon.
The Docker client and daemon communicate using a REST API, over UNIX sockets or a network interface.
Another Docker client is Docker Compose, that lets you work with applications consisting of a set of containers.

[Docker daemon]
● The Docker daemon (dockerd) listens for Docker API requests and manages Docker objects such as images, containers, networks, and volumes. 
● A daemon can also communicate with other daemons to manage Docker services.

[Docker client]
● The Docker client (docker) is the primary way that many Docker users interact with Docker.
● When you use commands such as docker run, the client sends these commands to Docker daemon (dockerd).
The docker command uses the Docker API. The Docker client can communicate with more than one daemon.

[Docker registries]
● A Docker registry stores Docker images. 
● Docker Hub is a public registry that anyone can use, and Docker is configured to look for images on Docker Hub by default.
● Can even run your own private registry.

[Docker objects]
● Images, Containers, Networks, Volumes, Plugins, and other Objects.

[Docker Images]
● An image is a read-only template with instructions for creating a Docker container.
● Often, an image is based on another image, with some additional customization.
● To build own image create a Dockerfile with a simple syntax for defining the steps needed to create the image and run it.
● Each instruction in a Dockerfile creates a layer in the image.
● When you change the Dockerfile and rebuild the image, only those layers which have changed are rebuilt.

[Docker Containers]
● A container is a runnable instance of an image.
● Can create, start, stop, move, or delete a container using the Docker API or CLI.
● Can connect a container to one or more networks, attach storage to it, or even create a new image based on its current state.
