[Run]
docker run -p 80:8080 adijaiswal/adi_repo:1
docker run --name webserver -p 8080:80 nginx
docker run --name myjenkins -p 8080:8080 -p 50000:50000 -v /var/jenkins_home jenkins:2.60.3-alpine
docker run -it --name tomcat -p 8080:8080 -v /tmp/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml -v /tmp/context.xml:/tmp/context.xml tomcat:9.0 /bin/bash -c "mv /usr/local/tomcat/webapps /usr/local/tomcat/webapps2; mv /usr/local/tomcat/webapps.dist /usr/local/tomcat/webapps; cp /tmp/context.xml /usr/local/tomcat/webapps/manager/META-INF/context.xml; catalina.sh run"
docker run -itd --network=none --name=CONTAINER_NAME IMAGE_NAME
docker run -d -it -v $(pwd):/var/www nginx
docker run -d -it -v $(pwd):/FOLDER_NAME/FOLDER_NAME IMAGE_NAME
docker run -d --restart always -p "127.0.0.1:5000:5000" --name local-registry registry:2
docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube
docker run --detach --name hashicorp --publish "0.0.0.0:8080:80" nginx:latest
‚óè link

[Exec]
docker exec CONTAINER_NAME ls /FOLDER_NAME/
docker exec CONTAINER_NAME ls -l /FOLDER_NAME/FOLDER_NAME/
docker exec CONTAINER_NAME cat /FOLDER_NAME/FILE_NAME
docker exec CONTAINER_NAME git clone REMOTE_REPOSITORY_URL(HTTPS/SSH) /FOLDER_NAME
docker exec CONTAINER_NAME ansible-playbook -i /FOLDER_NAME/FOLDER_NAME /FOLDER_NAME/FILE_NAME.yml --syntax-check
docker exec CONTAINER_NAME ansible-playbook -i /FOLDER_NAME/FOLDER_NAME /FOLDER_NAME/FILE_NAME.yml --connection=local --sudo

[Pull]
docker pull hello-world
docker pull nginx:latest

[Push]
docker push IP_ADDRESS:PORT_NO/IMAGE_NAME:TAG

[Inspect]
docker inspect CONTAINER_ID | grep volume
docker inspect CONTAINER_ID | grep IPAdd
docker inspect CONTAINER_ID | grep "IPAddress"
docker inspect CONTAINER_NAME | grep "IPAddress"

[Remove Images]
docker rmi IP_ADDRESS:PORT_NO/IMAGE_NAME:TAG

[Dockerfile_Build]
docker build -t IP_ADDRESS:PORT_NO/IMAGE_NAME:TAG .

[Compose]
docker-compose -f docker-compose_tomcat.yml down
